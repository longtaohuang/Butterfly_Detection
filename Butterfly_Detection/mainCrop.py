#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Mar 26 08:38:55 2018

@author: JieweiLu

Function:
    This function is used to crop the images in the bounding boxes
"""
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import tensorflow as tf


from funcOwn import funcRead
from funcOwn import funcOther

# dataName is used to determine the crop datasets (train or test)
dataName = 'train'


def main(_):
    
    # decide the path of the record file and where to save the images
    if dataName == 'train':
        file_tfRecord = '/home/JieweiLu/datasets/ButterflyDatasetAll/dataButterflyKuo2/butterfly_kuo2.record'
        savePath = '/home/JieweiLu/jackie/Program/ButterflyProgram/ButterflyProgram4/saveDataset/datasetKuo2/image/'
        
    # read the dataset generated by Wuming
    tensor_dict = funcRead.read_TF_od(file_tfRecord)
    
    
    # define the thread and open the session
    config = tf.ConfigProto()
    config.gpu_options.allow_growth = True
    sess = tf.Session(config=config)
    coord = tf.train.Coordinator()
    threads = tf.train.start_queue_runners(sess=sess, coord=coord)
    
    # define the flag
    flagRead = True
    
    # define the index and stop condition
    i = 0
    conditionList = []
     
    while flagRead:
        i+=1
        print(i)
        
        # extract the information
        diction = sess.run(tensor_dict)
        image_,bbox,label,num_groundtruth_boxes,filename = funcOther.getDictionInfor(diction)
        
        # the stop condition
        if filename in conditionList:
            flagRead = False
            break
        conditionList.append(filename)
        
        if num_groundtruth_boxes > 1:
            # deal with each crop image
            for ib in range(num_groundtruth_boxes):
                imageCrop = funcOther.getCropImage(ib,image_,bbox)
                funcOther.saveImage(ib,i,filename,label,savePath,imageCrop,0,dataName)
            
        elif num_groundtruth_boxes==1:
            ib = 0
            imageCrop = funcOther.getCropImage(ib,image_,bbox)
            funcOther.saveImage(ib,i,filename,label,savePath,imageCrop,0,dataName)
            
            
    # stop the threads
    coord.request_stop()
    coord.join(threads)
    print('OK')
    

if __name__ == '__main__':
    tf.app.run()
